<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Fitz.Lee | 不畏将来，不念过去，不怨现在]]></title>
  <subtitle><![CDATA[不畏将来，不念过去，不怨现在]]></subtitle>
  <link href="/blog/public/atom.xml" rel="self"/>
  <link href="http://fitzlee.github.io/blog/public/"/>
  <updated>2015-12-17T03:03:21.522Z</updated>
  <id>http://fitzlee.github.io/blog/public/</id>
  
  <author>
    <name><![CDATA[Fitz Lee]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Git Learn]]></title>
    <link href="http://fitzlee.github.io/blog/public/2014/01/06/git_learn/"/>
    <id>http://fitzlee.github.io/blog/public/2014/01/06/git_learn/</id>
    <published>2014-01-06T14:07:43.000Z</published>
    <updated>2015-12-17T03:03:21.522Z</updated>
    <content type="html"><![CDATA[<h1 id="Git在线文档"><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">Git在线文档</a></h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user<span class="class">.name</span> <span class="string">"Your Name"</span></span><br><span class="line">$ git config --global user<span class="class">.email</span> <span class="string">"email@example.com"</span></span><br></pre></td></tr></table></figure>
<h2 id="New_Project:">New Project:</h2><blockquote>
<p>new project with eclipse/android studio/vs2012/codeblocks/makefile/sublimetext<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br><span class="line">$ git add .</span><br><span class="line">$ git <span class="operator"><span class="keyword">commit</span> -<span class="keyword">m</span> <span class="string">"new project,first commit"</span></span><br><span class="line">onsite github <span class="keyword">add</span> your repository....  (may you should <span class="keyword">add</span> your ssh <span class="keyword">key</span>!)</span><br><span class="line"><span class="keyword">reference</span> the note:</span><br><span class="line">	echo <span class="string">"# Improve"</span> &gt;&gt; README.md</span><br><span class="line">	git <span class="keyword">add</span> README.md</span><br><span class="line">	git <span class="keyword">commit</span> -<span class="keyword">m</span> <span class="string">"first commit"</span></span><br><span class="line">	git remote <span class="keyword">add</span> origin https://github.com/iofcas/Improve.git              (为版本库添加名为origin的远程版本库)</span><br><span class="line">	git push -u origin <span class="keyword">master</span>                                  (把本地库的内容推送到远程，用git push命令，实际上是把当前分支<span class="keyword">master</span>推送到远程。)</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<h2 id="Distributed_Development:">Distributed Development:</h2><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone <span class="symbol">https:</span>/<span class="regexp">/github.com/iofcas</span><span class="regexp">/learngit1.git (git:/ssh</span><span class="symbol">:</span>)</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="Daily_Build:">Daily Build:</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ mv rm vim modify....that's ok</span><br><span class="line">$ git add -A</span><br><span class="line">$ git status   (git diff) </span><br><span class="line">$ git <span class="operator"><span class="keyword">commit</span> -<span class="keyword">m</span> <span class="string">"your build"</span> </span><br><span class="line">$ git push -u origin <span class="keyword">master</span></span></span><br></pre></td></tr></table></figure>
<h2 id="Branch_New_Function:">Branch New Function:</h2><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git branch <span class="built_in">dev</span></span><br><span class="line">git checkout <span class="built_in">dev</span>      <span class="number">1</span>,<span class="number">2</span>&lt;=&gt;git checkout -b <span class="built_in">dev</span></span><br><span class="line">mv rm vim modify....that's ok</span><br><span class="line">git commit -m <span class="string">"branch new function ok"</span></span><br><span class="line">git checkout master</span><br></pre></td></tr></table></figure>
<h3 id="No_conflict:">No conflict:</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="operator"><span class="keyword">merge</span> dev  (<span class="keyword">Fast</span>-forward)</span><br><span class="line">git branch -<span class="keyword">d</span> dev</span></span><br></pre></td></tr></table></figure>
<h3 id="if_conflict:(when_master_is_ahead_of_dev_newfunction_master,no_Fast-forward)">if conflict:(when master is ahead of dev_newfunction_master,no Fast-forward)</h3><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ vim &amp; modify <span class="operator">the</span> conlicted <span class="built_in">file</span></span><br><span class="line">$ git <span class="built_in">add</span> .</span><br><span class="line">$ git commit -m <span class="string">"conflict ok"</span></span><br><span class="line">$ git <span class="built_in">log</span> <span class="comment">--graph --pretty=oneline --abbrev-commit</span></span><br><span class="line">$ git <span class="built_in">log</span> <span class="comment">--graph --pretty=oneline</span></span><br></pre></td></tr></table></figure>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">*   e2b770b473f4b01c95051f67df183b716c588554 <span class="built_in">process</span> conflict</span><br><span class="line">|\</span><br><span class="line">| * <span class="number">4</span>cfb80d84f31611f53e643a408c62e99e25a1cbc branch <span class="built_in">add</span> <span class="operator">a</span> <span class="built_in">file</span></span><br><span class="line">* | d954435c6637927da5bdf440ed80c41e3fa346d2 <span class="built_in">add</span> aaa</span><br><span class="line">|/</span><br><span class="line">* <span class="number">2</span>f435ae3a03e6b5225e91fb4d704c1e2eb85d562 modify git learn</span><br><span class="line">* b60880ac8fcecf1a20a332f12222d5e6f316aef4 modify <span class="built_in">file</span>.cpp added-&gt;<span class="built_in">add</span></span><br><span class="line">* <span class="number">1</span>ac939b4d2b67777d40ae5a5d3c8cecec51049d0 <span class="built_in">add</span> branch hello <span class="function"><span class="keyword">function</span></span></span><br><span class="line">* <span class="number">07e8</span>db4d764b1440bf4fa3c275e1ec339f24f97b modify learngit &amp; daily build model</span><br><span class="line">* b6408d0509fef560205a0a64fec27afc61285cdf del <span class="operator">a</span> <span class="built_in">file</span> &amp; <span class="built_in">new</span> fileB</span><br><span class="line">* <span class="number">1</span>c408eafa0db0306a63fe9a44f8edced2e72b898 modify <span class="built_in">file</span>-&gt;<span class="built_in">file</span>.cpp;<span class="built_in">new</span> <span class="built_in">file</span> fileA</span><br><span class="line">* <span class="number">6</span>db1625bd6355cb7e53e8035dad50ff2ace6a193 <span class="built_in">file</span>.c-&gt;<span class="built_in">file</span> <span class="operator">and</span> so <span class="command"><span class="keyword">on</span></span></span><br><span class="line">* c7e0be6095dd168603a8661e308d9db1de660955 <span class="built_in">add</span> <span class="operator">a</span> <span class="built_in">new</span> <span class="built_in">file</span></span><br><span class="line">* b6ee53e718df3f135c16a94890b305204f7a6ad5 <span class="built_in">add</span> readme</span><br><span class="line">* a61163eeef7dcac1a592252cf30fd1451e08fd04 leartgit1 <span class="keyword">first</span> commit</span><br></pre></td></tr></table></figure>
<h2 id="–no-ff:">–no-ff:</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">merge</span> --<span class="keyword">no</span>-ff -<span class="keyword">m</span> <span class="string">"merge with no-ff"</span> dev</span><br><span class="line">(合并分支时，加上--<span class="keyword">no</span>-ff参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而fast forward合并就看不出来曾经做过合并。)</span><br></pre></td></tr></table></figure>
<h2 id="BUG:">BUG:</h2><p>(当你接到一个修复一个代号101的bug的任务时，很自然地，你想创建一个分支issue-101来修复它，但是，等等，当前正在dev上进行的工作还没有提交)<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git stash</span><br><span class="line"><span class="label">Process</span> <span class="keyword">BUG </span><span class="keyword">Branch</span><br><span class="line"></span>$ git stash list</span><br><span class="line">$ git stash <span class="keyword">pop </span>(git stash apply + git stash drop)</span><br></pre></td></tr></table></figure></p>
<h2 id="Del_New_function_with_no_merge:">Del New function with no merge:</h2><p>(接到上级命令，因经费不足，新功能必须取消)<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="keyword">branch </span>-D dev</span><br></pre></td></tr></table></figure></p>
<h2 id="Dev_Branch:">Dev Branch:</h2><p>(创建远程new分支并推送本地dev分支到远程)<br>1 git push origin dev:new</p>
<h2 id="Version_Tag:">Version Tag:</h2><p>(Git的标签虽然是版本库的快照，但其实它就是指向某个commit的指针)<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>git tag v1.<span class="number">0</span> (<span class="constant">HEAD)</span></span><br><span class="line"><span class="variable">$ </span>git tag v<span class="number">0</span>.<span class="number">9</span> <span class="number">6224937</span> (git log --pretty=oneline --abbrev-commit)</span><br><span class="line"><span class="variable">$ </span>git tag</span><br><span class="line"><span class="variable">$ </span>git show v<span class="number">0</span>.<span class="number">9</span></span><br><span class="line"><span class="variable">$ </span>git tag -a v<span class="number">0</span>.<span class="number">1</span> -m <span class="string">"version 0.1 released"</span> <span class="number">3628164</span></span><br><span class="line"><span class="variable">$ </span>git tag -d v<span class="number">0</span>.<span class="number">1</span></span><br><span class="line"><span class="variable">$ </span>git push origin v1.<span class="number">0</span></span><br><span class="line"><span class="variable">$ </span>git push origin --tags (push所有分支)</span><br><span class="line"><span class="variable">$ </span>git push origin <span class="symbol">:refs/tags/v0</span>.<span class="number">9</span> (删除远程分支)</span><br></pre></td></tr></table></figure></p>
<h2 id="Open_Source_Join:">Open Source Join:</h2><p>(一定要从自己的账号下clone仓库，这样你才能推送修改。如果从bootstrap的作者的仓库地址git@github.com:twbs/bootstrap.git克隆，因为没有权限，你将不能推送修改。)<br><figure class="highlight smalltalk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="char">$ </span>fork  </span><br><span class="line"><span class="char">$ </span>git clone <span class="method">https:</span>//...my.git</span><br><span class="line"><span class="char">$ </span>vim...</span><br><span class="line"><span class="char">$ </span>pull request</span><br></pre></td></tr></table></figure></p>
<h2 id="-gitignore:">.gitignore:</h2><p>(<a href="https://github.com/github/gitignore" target="_blank" rel="external">https://github.com/github/gitignore</a>)</p>
<blockquote>
<p>1 另存为.gitignore即可</p>
</blockquote>
<h2 id="alias:">alias:</h2><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global alias.st <span class="string">status   =&gt;</span> git st</span><br><span class="line">$ git config --global alias.unstage <span class="string">'reset HEAD'</span> =&gt; git unstage test.py  &lt;=&gt; git <span class="keyword">reset</span> $ HEAD test.py</span><br><span class="line">$ git config --global alias.<span class="keyword">last</span> <span class="string">'log -1'</span>  =&gt; git <span class="keyword">last</span></span><br><span class="line">$ git config --global alias.lg <span class="string">"log --color --graph --pretty=format:'<span class="variable">%Cred</span><span class="variable">%h</span><span class="variable">%Creset</span> -<span class="variable">%C</span>(yellow)<span class="variable">%d</span><span class="variable">%Creset</span> <span class="variable">%s</span> <span class="variable">%Cgreen</span>(<span class="variable">%cr</span>) <span class="variable">%C</span>(bold blue)&lt;<span class="variable">%an</span>&gt;<span class="variable">%Creset</span>' --abbrev-commit"</span>   =&gt; $ git lg</span><br></pre></td></tr></table></figure>
<h2 id="config:">config:</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ cat .gitconfig</span><br><span class="line">[alias]</span><br><span class="line">    co = checkout</span><br><span class="line">    ci = <span class="operator"><span class="keyword">commit</span></span><br><span class="line">    br = branch</span><br><span class="line">    st = <span class="keyword">status</span></span><br><span class="line">[<span class="keyword">user</span>]</span><br><span class="line">    <span class="keyword">name</span> = Your <span class="keyword">Name</span></span><br><span class="line">    email = your@email.com</span></span><br></pre></td></tr></table></figure>
<h2 id="Reset_File:">Reset File:</h2><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Not staged <span class="keyword">for</span> commit (<span class="operator">not</span> <span class="built_in">add</span> .):</span><br><span class="line">(git checkout <span class="comment">-- 丢弃工作区的修改)</span></span><br><span class="line">(git checkout其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”)</span><br><span class="line">$ git checkout <span class="comment">-- readme.txt</span></span><br></pre></td></tr></table></figure>
<h2 id="Changes_to_be_committed(has_added_-):">Changes to be committed(has added .):</h2><p>(git reset既可以回退版本，也可以把暂存区回退到工作区的修改)<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="operator"><span class="keyword">reset</span> <span class="keyword">HEAD</span> readme.txt</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Reset:">Reset:</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="operator"><span class="keyword">reset</span> <span class="comment">--hard HEAD^(HEAD当前版本，HEAD^^前两版本，HEAD~100前100版本)</span></span><br><span class="line">$ git <span class="keyword">log</span> <span class="comment">--pretty=oneline</span></span><br><span class="line">$ git <span class="keyword">reset</span> <span class="comment">--hard 3628164 </span></span><br><span class="line">$ git reflog  (查看命令历史，以便确定要回到未来的哪个版本)</span></span><br></pre></td></tr></table></figure>
<h2 id="Fetch&amp;Pull:">Fetch&amp;Pull:</h2><p>( ! [rejected]        master -&gt; master (fetch first))<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">1 git fetch origin master  (master:master 中第一个master是origin/master)</span><br><span class="line">git fetch origin master</span><br><span class="line">git log -p master..origin/master</span><br><span class="line">git <span class="operator"><span class="keyword">merge</span> origin/<span class="keyword">master</span></span><br><span class="line"></span><br><span class="line"><span class="number">2</span> git <span class="keyword">fetch</span> origin <span class="keyword">master</span>:tmp</span><br><span class="line">	git <span class="keyword">fetch</span> origin <span class="keyword">master</span>:tmp</span><br><span class="line">	git diff tmp </span><br><span class="line">	git <span class="keyword">merge</span> tmp</span><br><span class="line"></span><br><span class="line"><span class="number">3</span> git pull:</span><br><span class="line">	(相当于git <span class="keyword">fetch</span> 和 git <span class="keyword">merge</span>)</span><br><span class="line">	git pull origin <span class="keyword">master</span></span><br><span class="line"></span><br><span class="line"><span class="number">4</span> 决策：</span><br><span class="line">git <span class="keyword">fetch</span>更安全一些</span><br><span class="line">因为在<span class="keyword">merge</span>前，我们可以查看更新情况，然后再决定是否合并</span><br><span class="line"></span><br><span class="line"><span class="number">5</span> git <span class="keyword">fetch</span> origin branch1:branch2</span><br><span class="line">  (使用远程branch1分支在本地创建branch2,但不会切换到该分支)</span><br><span class="line">	如果本地不存在branch2分支, 则会自动创建一个新的branch2分支, </span><br><span class="line">	如果本地存在branch2分支, 并且是<span class="string">`fast forward', 则自动合并两个分支, 否则, 会阻止以上操作.</span><br><span class="line"></span><br><span class="line">6 git fetch origin master:tmp , git push origin master:dev </span><br><span class="line"></span><br><span class="line">	git fetch origin server:local  从server fetch 到local</span><br><span class="line">	git push origin local:server   从local  push 到server</span></span></span><br></pre></td></tr></table></figure></p>
<h2 id="Diff:">Diff:</h2><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git diff origin/master <span class="list">(当前版本跟origin/master比较)</span></span><br><span class="line">git diff dev <span class="list">(当前版本跟dev版本比较)</span></span><br></pre></td></tr></table></figure>
<h2 id="Git_commit:">Git commit:</h2><p>一次良好的提交信息应该包含一个信息头，尽量用一行文字总结那些必要信息<br>然后空下一行，<br>接着写下关于这次提交的具体内容，有关修复bug的背景等等，尽量表达你为什么<br>要做这次提交而不是你正在作什么提交。这样被人才能很好的理解而不会弄不清楚<br>为什么需要这个东西。所有的提交内容保持在74个字符之内，这样才能被 git log<br>正常的显示，而不会超过屏幕。<br>下面是一些： 提交者信息，或者其他信息，一般都是 git 里面需要的代码编写者或者<br>测试者名字和邮箱，具体参考 git 。<br>(<a href="http://blog.csdn.net/jingxia2008/article/details/41290837" target="_blank" rel="external">http://blog.csdn.net/jingxia2008/article/details/41290837</a>  <a href="http://blog.jobbole.com/92713/" target="_blank" rel="external">http://blog.jobbole.com/92713/</a>)<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">Summarize changes <span class="keyword">in</span> <span class="keyword">around</span> <span class="number">50</span> <span class="property">characters</span> <span class="keyword">or</span> less</span><br><span class="line"> </span><br><span class="line">More detailed explanatory <span class="type">text</span>, <span class="keyword">if</span> necessary. Wrap <span class="keyword">it</span> <span class="keyword">to</span> <span class="keyword">about</span> <span class="number">72</span></span><br><span class="line"><span class="property">characters</span> <span class="keyword">or</span> so. In <span class="keyword">some</span> contexts, <span class="keyword">the</span> <span class="keyword">first</span> line <span class="keyword">is</span> treated <span class="keyword">as</span> <span class="keyword">the</span></span><br><span class="line">subject <span class="keyword">of</span> <span class="keyword">the</span> commit <span class="keyword">and</span> <span class="keyword">the</span> <span class="property">rest</span> <span class="keyword">of</span> <span class="keyword">the</span> <span class="type">text</span> <span class="keyword">as</span> <span class="keyword">the</span> body. The</span><br><span class="line">blank line separating <span class="keyword">the</span> summary <span class="keyword">from</span> <span class="keyword">the</span> body <span class="keyword">is</span> critical (unless</span><br><span class="line">you omit <span class="keyword">the</span> body entirely); various tools like `<span class="command">log</span>`, `shortlog`</span><br><span class="line"><span class="keyword">and</span> `rebase` can <span class="keyword">get</span> confused <span class="keyword">if</span> you <span class="command">run</span> <span class="keyword">the</span> two together.</span><br><span class="line"> </span><br><span class="line">Explain <span class="keyword">the</span> problem <span class="keyword">that</span> this commit <span class="keyword">is</span> solving. Focus <span class="function_start"><span class="keyword">on</span></span> why you</span><br><span class="line">are making this change <span class="keyword">as</span> opposed <span class="keyword">to</span> how (<span class="keyword">the</span> code explains <span class="keyword">that</span>).</span><br><span class="line">Are there side effects <span class="keyword">or</span> other unintuitive consequenses <span class="keyword">of</span> this</span><br><span class="line">change? Here's <span class="keyword">the</span> place <span class="keyword">to</span> explain them.</span><br><span class="line"> </span><br><span class="line">Further <span class="property">paragraphs</span> come <span class="keyword">after</span> blank lines.</span><br><span class="line"> </span><br><span class="line"> - Bullet points are okay, too</span><br><span class="line"> </span><br><span class="line"> - Typically a hyphen <span class="keyword">or</span> asterisk <span class="keyword">is</span> used <span class="keyword">for</span> <span class="keyword">the</span> bullet, preceded</span><br><span class="line">   <span class="keyword">by</span> a single <span class="constant">space</span>, <span class="keyword">with</span> blank lines <span class="keyword">in</span> <span class="keyword">between</span>, <span class="keyword">but</span> conventions</span><br><span class="line">   vary here</span><br><span class="line"> </span><br><span class="line">If you use an issue tracker, <span class="keyword">put</span> references <span class="keyword">to</span> them <span class="keyword">at</span> <span class="keyword">the</span> bottom,</span><br><span class="line">like this:</span><br><span class="line"> </span><br><span class="line">Resolves: <span class="comment">#123</span></span><br><span class="line">See also: <span class="comment">#456, #789</span></span><br><span class="line">Reported-<span class="keyword">by</span>: whoever-reported-<span class="keyword">it</span></span><br><span class="line">Signed-off-<span class="keyword">by</span>: Your Name &lt;youremail@yourhost.com&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="modified:_xxx(modified_content,_untracked_content)">modified: xxx(modified content, untracked content)</h2><p>大概意思是xxx目录没有被跟踪。那自然push上去的时候是空的了<br>解决办法：后来发现这主要是xxx目录下有一个.git 目录，可能是被人给你这个目录的时候里面有了.git目录。删除.git目录。重新git add .就可<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>git add . 前最好删除所有字母下的.git 一个工程最好只有一个.git</span><br><span class="line"><span class="variable">$ </span>find . -name .git | xargs rm -fr</span><br><span class="line"><span class="variable">$ </span>git add .</span><br></pre></td></tr></table></figure></p>
<ul>
<li>如果在master做了修改，没有commit，就新建分支，分支commit，将导致master恢复版本，之前的修改自动放到branch新分支里</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[学习使用git来提高工作效率]]>
    
    </summary>
    
      <category term="git" scheme="http://fitzlee.github.io/blog/public/tags/git/"/>
    
      <category term="learn" scheme="http://fitzlee.github.io/blog/public/tags/learn/"/>
    
      <category term="document" scheme="http://fitzlee.github.io/blog/public/categories/document/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo 写文章方法]]></title>
    <link href="http://fitzlee.github.io/blog/public/2013/09/05/hexo_helloworld/"/>
    <id>http://fitzlee.github.io/blog/public/2013/09/05/hexo_helloworld/</id>
    <published>2013-09-05T14:07:43.000Z</published>
    <updated>2015-12-17T03:06:06.799Z</updated>
    <content type="html"><![CDATA[<p>这里简要做介绍，深入了解可以参考:<a href="http://hexo.io/docs/" target="_blank" rel="external">官方文档</a></p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="创建新文章">创建新文章</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<h3 id="打开source_posts\xxx-md,开始写文章">打开source_posts\xxx.md,开始写文章</h3><h4 id="主要用法">主要用法</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">title: Hexo写文章</span><br><span class="line">layout: post</span><br><span class="line">date: <span class="number">2014</span>-<span class="number">03</span>-<span class="number">03</span> <span class="number">19</span>:<span class="number">07</span>:<span class="number">43</span></span><br><span class="line">comments: <span class="literal">true</span></span><br><span class="line">categories: Blog</span><br><span class="line"><span class="preprocessor">#tags: [Hexo]</span></span><br><span class="line">tags:</span><br><span class="line">    - Hexo</span><br><span class="line">    - Blog</span><br><span class="line">keywords: Hexo, Blog</span><br><span class="line">description: 生命在于折腾</span><br><span class="line">photos:</span><br><span class="line">    - https:<span class="comment">//ss0.bdstatic.com/5aV1bjqh_Q23odCf/static/superplus/img/logo_white_ee663702.png</span></span><br></pre></td></tr></table></figure>
<h4 id="显示摘要">显示摘要</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">以上是文章摘要 </span><br><span class="line">&lt;!--more--&gt; </span><br><span class="line">以下是余下全文</span><br></pre></td></tr></table></figure>
<h4 id="MarkDown_Markdown-Chinese-Demo">MarkDown  <a href="https://github.com/guoyunsky/Markdown-Chinese-Demo" target="_blank" rel="external">Markdown-Chinese-Demo</a></h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># 标题<span class="number">1</span></span></span><br><span class="line"><span class="preprocessor">## 标题<span class="number">2</span></span></span><br><span class="line"><span class="preprocessor">### 标题<span class="number">3</span></span></span><br><span class="line">- 列表<span class="number">1</span></span><br><span class="line"></span><br><span class="line">测试</span><br><span class="line"></span><br><span class="line">- 列表<span class="number">2</span></span><br><span class="line">- 列表<span class="number">3</span></span><br><span class="line">水平线</span><br><span class="line">—————————-</span><br><span class="line"><span class="number">1.</span> 列表<span class="number">1</span></span><br><span class="line"><span class="number">2.</span> 列表<span class="number">2</span></span><br><span class="line"><span class="number">3.</span> 列表<span class="number">3</span></span><br><span class="line"><span class="number">5.</span> 顺序错了不用担心</span><br><span class="line"><span class="number">3.</span> 写错的列表，会自动纠正</span><br><span class="line">如果文字后面紧跟着水平线，看看是什么效果</span><br><span class="line">———————</span><br><span class="line">*我是斜体*</span><br><span class="line">测试文字里面，**我是粗体**，很简单</span><br><span class="line">__我是粗体__</span><br><span class="line">————————————————————————————</span><br><span class="line">保存后，就可以看到渲染后的效果：</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="本地查看">本地查看</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="部署到git">部署到git</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a><br>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a><br>More info: <a href="http://dillinger.io/" target="_blank" rel="external">Markdown</a></p>
]]></content>
    <summary type="html">
    <![CDATA[生命在于折腾]]>
    
    </summary>
    
      <category term="Blog" scheme="http://fitzlee.github.io/blog/public/tags/Blog/"/>
    
      <category term="Hexo" scheme="http://fitzlee.github.io/blog/public/tags/Hexo/"/>
    
      <category term="Blog" scheme="http://fitzlee.github.io/blog/public/categories/Blog/"/>
    
  </entry>
  
</feed>
